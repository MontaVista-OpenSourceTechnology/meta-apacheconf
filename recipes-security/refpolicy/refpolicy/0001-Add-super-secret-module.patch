From 460bea4b518bf5a45e9adc2ac96334e3f86191ac Mon Sep 17 00:00:00 2001
From: Corey Minyard <cminyard@mvista.com>
Date: Wed, 19 Oct 2022 09:25:19 -0500
Subject: [PATCH] Add super-secret module

---
 policy/modules/apps/supsec.fc |   2 +
 policy/modules/apps/supsec.if | 149 ++++++++++++++++++++++++++++++++++
 policy/modules/apps/supsec.te |  40 +++++++++
 3 files changed, 191 insertions(+)
 create mode 100644 policy/modules/apps/supsec.fc
 create mode 100644 policy/modules/apps/supsec.if
 create mode 100644 policy/modules/apps/supsec.te

diff --git a/policy/modules/apps/supsec.fc b/policy/modules/apps/supsec.fc
new file mode 100644
index 000000000..489939b11
--- /dev/null
+++ b/policy/modules/apps/supsec.fc
@@ -0,0 +1,2 @@
+/usr/bin/supsec	--	gen_context(system_u:object_r:supsec_exec_t,s0)
+/usr/share/super-secret(/.*)?	--	gen_context(system_u:object_r:supsec_data_t,s0)
diff --git a/policy/modules/apps/supsec.if b/policy/modules/apps/supsec.if
new file mode 100644
index 000000000..499aeca09
--- /dev/null
+++ b/policy/modules/apps/supsec.if
@@ -0,0 +1,149 @@
+## <summary>Super secret data.</summary>
+
+#######################################
+## <summary>
+##	The role template for the super-secret module.
+## </summary>
+## <desc>
+##	<p>
+##	This template creates a derived domains which are used
+##	for the super-secret application.
+##	</p>
+## </desc>
+## <param name="role_prefix">
+##	<summary>
+##	The prefix of the user role (e.g., user
+##	is the prefix for user_r).
+##	</summary>
+## </param>
+## <param name="user_domain">
+##	<summary>
+##	User domain for the role.
+##	</summary>
+## </param>
+## <param name="user_exec_domain">
+##	<summary>
+##	User exec domain for execute and transition access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access
+##	</summary>
+## </param>
+#
+template(`supsec_role',`
+	gen_require(`
+		attribute supsec_domain;
+		type supsec_exec_t;
+	')
+
+	########################################
+	#
+	# Declarations
+	#
+
+	type $1_supsec_t, supsec_domain;
+	domain_type($1_supsec_t)
+	domain_entry_file($1_supsec_t, supsec_exec_t)
+	role $2 types $1_supsec_t;
+
+	domain_interactive_fd($1_supsec_t)
+	application_type($1_supsec_t)
+
+	########################################
+	#
+	# Policy
+	#
+
+	domtrans_pattern($3, supsec_exec_t, $1_supsec_t)
+
+	allow $3 $1_supsec_t:process { ptrace noatsecure signal_perms };
+	ps_process_pattern($3, $1_supsec_t)
+
+	corecmd_bin_domtrans($1_supsec_t, $2)
+')
+
+########################################
+## <summary>
+##	Execute supsec in the supsec domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`supsec_domtrans',`
+	gen_require(`
+		type supsec_t, supsec_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, supsec_exec_t, supsec_t)
+')
+
+########################################
+## <summary>
+##	Execute supsec in the supsec domain, and
+##	allow the specified role the supsec domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+#
+interface(`supsec_run',`
+	gen_require(`
+		attribute_role supsec_roles;
+	')
+
+	supsec_domtrans($1)
+	roleattribute $2 supsec_roles;
+')
+
+########################################
+## <summary>
+##	Execute supsec in the caller domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`supsec_exec',`
+	gen_require(`
+		type supsec_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	can_exec($1, supsec_exec_t)
+')
+
+########################################
+## <summary>
+##	Read and write supsec shared memory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`supsec_rw_data',`
+	gen_require(`
+		type supsec_data_t;
+	')
+
+	rw_files_pattern($1, supsec_data_t, supsec_data_t)
+')
+
+
+
diff --git a/policy/modules/apps/supsec.te b/policy/modules/apps/supsec.te
new file mode 100644
index 000000000..636b10b44
--- /dev/null
+++ b/policy/modules/apps/supsec.te
@@ -0,0 +1,40 @@
+policy_module(supsec, 1.11.1)
+
+########################################
+#
+# Declarations
+#
+
+attribute supsec_domain;
+
+attribute_role supsec_roles;
+
+type supsec_t, supsec_domain;
+type supsec_exec_t;
+init_system_domain(supsec_t, supsec_exec_t)
+role supsec_roles types supsec_t;
+
+application_type(supsec_t)
+
+optional_policy(`
+	wm_application_domain(supsec_t, supsec_exec_t)
+')
+
+type supsec_data_t;
+files_type(supsec_data_t)
+ubac_constrained(supsec_data_t)
+
+########################################
+#
+# Common local policy
+#
+
+allow supsec_domain self:process { signal getsched execheap execmem execstack };
+
+########################################
+#
+# local policy
+#
+
+manage_files_pattern(supsec_t, supsec_data_t, supsec_data_t)
+manage_lnk_files_pattern(supsec_t, supsec_data_t, supsec_data_t)
-- 
2.34.1

